// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


// DOCS: https://www.prisma.io/docs/orm

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



// user untuk kita sebagai admin

model User{
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  password   String
  name       String?
  posts      Company[]
  statistics Statistics?
}

// Company
model Company {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String    @unique
  user     User      @relation(fields: [userId], references: [id])
  userId   String    @db.ObjectId
  userMessages UserMessage[]
  responseAI ResponseAI[]

  starred Boolean 
  archived Boolean
  latestChatDate DateTime?
}

model UserMessage {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  message   String
  company   Company @relation(fields: [companyId], references: [id])
  companyId String  @db.ObjectId
  dateCreated DateTime
}

// response query
model ResponseAI {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  message   String
  company   Company @relation(fields: [companyId], references: [id])
  companyId String @db.ObjectId
  urgency   Int // 1 - 10
  tone      Int
  topic     Topics
  dateCreated DateTime
}


model Statistics {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  user              User   @relation(fields: [userId], references: [id])
  userId            String @unique @db.ObjectId
  totalComplaints   Int
  commonComplaints  Topics
}



enum Topics {
  Services
  Products
  Technical
  Billing
  Complaints
  Suggestions
}

model Languages {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  language String
}


